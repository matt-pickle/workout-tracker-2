{"version":3,"sources":["Components/UserContext.js","Components/NavButton.js","Components/Navigation.js","Components/InputBox.js","Components/Button.js","Components/Lift.js","Components/TimerInputs.js","Components/TimerDisplay.js","Components/Timer.js","Components/LogoutButton.js","Components/Current.js","Components/PastLift.js","Components/PastWorkout.js","Components/History.js","Components/WeightInput.js","Components/WeightChart.js","Components/Weight.js","Components/User.js","Components/ProtectedRoute.js","Components/Register.js","Components/Login.js","App.js","index.js"],"names":["UserContext","React","createContext","UserContextProvider","props","useState","user","setUser","useEffect","fetch","then","res","ok","text","console","error","Provider","value","children","NavButton","hoverClass","setHoverClass","hover","window","navigator","maxTouchPoints","msMaxTouchPoints","unHover","to","link","className","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","Navigation","forwardRef","ref","input","setInput","addToLift","name","id","htmlFor","type","onChange","event","target","Button","onClick","sets","setSets","liftObj","setLiftObj","repsInputRef","useRef","key","current","focus","addToWorkout","repInputBoxes","map","setNum","newSetNum","length","prev","TimerInputs","addZero","num","minutesArr","i","push","minutesOptions","secondsArr","secondsOptions","minutes","setMinutes","seconds","setSeconds","TimerDisplay","minutesRemaining","setMinutesRemaining","secondsRemaining","setSecondsRemaining","endingTime","Date","now","calculateTimeRemaining","Math","floor","timer","setInterval","clearInterval","alert","setTimerIsRunning","Timer","timerIsRunning","startButton","stopButton","LogoutButton","redirect","setRedirect","Current","lifts","setLifts","workoutArr","setWorkoutArr","message","setMessage","liftNameInputRef","useContext","some","obj","allLifts","liftNum","newLiftNum","today","month","getMonth","date","getDate","year","getFullYear","dateString","workoutObj","JSON","stringify","method","PastLift","lift","weight","reps","PastWorkout","pastLifts","repsArr","numOfSets","Object","keys","removeWorkout","History","workoutHistory","setWorkoutHistory","workoutHistoryCopy","newWorkoutHistory","filter","workout","indexOf","parse","pastWorkouts","workoutDate","WeightInput","weightObj","setWeightHistory","WeightChart","chartData","labels","weightHistory","datasets","label","data","values","borderColor","borderWidth","pointBackgroundColor","options","legend","display","scales","xAxes","gridLines","lineWidth","color","ticks","fontColor","fontSize","fontStyle","yAxes","lineHeight","Weight","User","path","ProtectedRoute","isAuth","setIsAuth","Register","username","setUsername","password","setPassword","history","App","exact","component","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e96f4e4.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nconst UserContext = React.createContext();\r\n\r\nfunction UserContextProvider(props) {\r\n  const [user, setUser] = useState(\"\");\r\n  \r\n  //Gets username from web token\r\n  useEffect(() => {\r\n    fetch(\"/user/getUser\")\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          res.text().then(text => {\r\n            console.error(text);\r\n          });\r\n        } else {\r\n          res.text().then(text => {\r\n            setUser(text);\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  \r\n  return (\r\n    <UserContext.Provider value={user}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport {UserContextProvider, UserContext};","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction NavButton(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  //Applies hover effect class if not using a touch screen\r\n  function hover() {\r\n    if (\"ontouchstart\" in window\r\n      || navigator.maxTouchPoints > 0\r\n      || navigator.msMaxTouchPoints > 0) {\r\n        setHoverClass(\"\")\r\n    } else {\r\n      setHoverClass(\"hovered\");\r\n    }\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <Link to={props.link}\r\n          className={`button nav-button ${hoverClass}`}\r\n          onMouseEnter={hover}\r\n          onMouseLeave={unHover}\r\n          onTouchStart={hover}\r\n          onTouchEnd={unHover}\r\n    >\r\n      {props.text}\r\n    </Link>\r\n  )\r\n}\r\n\r\n\r\nexport default NavButton;","import React from \"react\";\r\nimport NavButton from \"./NavButton\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <NavButton text=\"HISTORY\"\r\n              link=\"/user/history\"\r\n      />\r\n      <NavButton text=\"CURRENT\"\r\n              link=\"/user/current\"\r\n      />\r\n      <NavButton text=\"WEIGHT\"\r\n              link=\"/user/weight\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default Navigation;","import React, {useState, useEffect} from \"react\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction InputBox(props, ref) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.addToLift(props.name, input)\r\n  }, [input])\r\n\r\n  return (\r\n    <div className=\"input-box\" id={props.name + \"-input-box\"}>\r\n      <label htmlFor={props.name}>{props.name}</label>\r\n      <div className=\"input-container\">\r\n        <input type=\"text\"\r\n               id={props.name}\r\n               value={input}\r\n               onChange={handleChange}\r\n               ref={ref}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.forwardRef(InputBox);","import React, {useState} from \"react\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Button(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  //Applies hover effect class if not using a touch screen\r\n  function hover() {\r\n    if (\"ontouchstart\" in window\r\n      || navigator.maxTouchPoints > 0\r\n      || navigator.msMaxTouchPoints > 0) {\r\n        setHoverClass(\"\")\r\n    } else {\r\n      setHoverClass(\"hovered\");\r\n    }\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <button className={`button ${hoverClass}`}\r\n            id={props.id}\r\n            onMouseEnter={hover}\r\n            onMouseLeave={unHover}\r\n            onTouchStart={hover}\r\n            onTouchEnd={unHover}\r\n            onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, {useState, useEffect, useRef} from \"react\";\r\nimport InputBox from \"./InputBox\";\r\nimport Button from \"./Button\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Lift(props, ref) {\r\n  const [sets, setSets] = useState([1]);\r\n  const [liftObj, setLiftObj] = useState({id: props.id});\r\n  const repsInputRef = useRef(null);\r\n\r\n  function addSet() {\r\n    const newSetNum = sets.length + 1;\r\n    setSets(prev => [...prev, newSetNum]);\r\n  }\r\n\r\n  function addToLift(key, value) {\r\n    setLiftObj({...liftObj, [key]: value});\r\n  }\r\n\r\n  //Focuses the new input box when a new set is added\r\n  useEffect(() => {    \r\n    repsInputRef.current.focus();\r\n  }, [sets]);\r\n\r\n  useEffect(() => {\r\n    props.addToWorkout(liftObj);\r\n  }, [liftObj]);\r\n\r\n  const repInputBoxes = sets.map(setNum => {\r\n    return <InputBox name={`Set ${setNum}`}\r\n                     key={setNum}\r\n                     ref={repsInputRef}\r\n                     addToLift={addToLift}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"lift-box\">\r\n      <InputBox name=\"Lift\"\r\n                addToLift={addToLift}\r\n                ref={ref}\r\n      />\r\n      <InputBox name=\"Weight\"\r\n                addToLift={addToLift}\r\n      />\r\n      {repInputBoxes}\r\n      <Button text=\"ADD SET\"\r\n              id=\"add-set-button\"\r\n              onClick={addSet}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.forwardRef(Lift);","import React from \"react\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction TimerInputs(props) {\r\n  \r\n  //Adds zero in front of single-digit numbers\r\n  function addZero(num) {\r\n    if (num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n  \r\n  //Populates minutes options\r\n  let minutesArr = [];\r\n  for (let i = 0; i <= 59; i++) {\r\n    minutesArr.push(i);\r\n  }\r\n  const minutesOptions = minutesArr.map(num => {\r\n    return <option key={num}>{addZero(num)}</option>\r\n  });\r\n\r\n  //Populates seconds options\r\n  let secondsArr = [];\r\n  for (let i = 0; i <= 59; i++) {\r\n    secondsArr.push(i);\r\n  }\r\n  const secondsOptions = secondsArr.map(num => {\r\n    return <option key={num}>{addZero(num)}</option>\r\n  });\r\n\r\n  function changeMinutes(event) {\r\n    props.setMinutes(event.target.value);\r\n  }\r\n\r\n  function changeSeconds(event) {\r\n    props.setSeconds(event.target.value);\r\n  } \r\n\r\n  return (\r\n    <form className=\"timer-inputs\">\r\n      <select id=\"minutes-input\"\r\n              value={props.minutes}\r\n              onChange={changeMinutes}\r\n      >\r\n       {minutesOptions}\r\n      </select>\r\n      <select id=\"seconds-input\"\r\n              value={props.seconds}\r\n              onChange={changeSeconds}\r\n      >\r\n       {secondsOptions}\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TimerInputs;","import React, {useState, useEffect} from \"react\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction TimerDisplay(props) {\r\n  const [minutesRemaining, setMinutesRemaining] = useState(props.minutes);\r\n  const [secondsRemaining, setSecondsRemaining] = useState(props.seconds);\r\n  \r\n  const startingTime = Date.now();\r\n  const timerMilliseconds = props.minutes * 60000 + props.seconds * 1000;\r\n  const endingTime = startingTime + timerMilliseconds;\r\n\r\n  //Adds zero in front of single-digit numbers and changes 60 to 00\r\n  function addZero(num) {\r\n    if (num < 10 && num >= 0) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n\r\n  //Calculates minutes and seconds remaining and sets them to state\r\n  function calculateTimeRemaining() {\r\n    setSecondsRemaining(addZero(Math.floor(((endingTime - Date.now()) / 1000) % 60)));\r\n    setMinutesRemaining(addZero(Math.floor(((endingTime - Date.now()) / 60000) % 60)));\r\n  }\r\n\r\n  //Runs calculateTimeRemaining() every second\r\n  useEffect(() => {\r\n    let timer = null;\r\n    calculateTimeRemaining();\r\n    timer = setInterval(calculateTimeRemaining, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  //Alerts when time is up and switches back to the input display\r\n  function timesUp() {\r\n    if (minutesRemaining === \"00\" && secondsRemaining === \"00\") {\r\n      alert(\"Times Up!\");\r\n      props.setTimerIsRunning(false);\r\n    }\r\n  }\r\n\r\n    return (\r\n    <div>\r\n      <p className=\"timer-display\">{`${minutesRemaining} : ${secondsRemaining}`}</p>\r\n      {timesUp()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimerDisplay;","import React, {useState} from \"react\";\r\nimport TimerInputs from \"./TimerInputs\";\r\nimport TimerDisplay from \"./TimerDisplay\";\r\nimport Button from \"./Button\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Timer() {\r\n  const [timerIsRunning, setTimerIsRunning] = useState(false);\r\n  const [minutes, setMinutes] = useState(\"00\");\r\n  const [seconds, setSeconds] = useState(\"00\");\r\n  \r\n  const startButton = <Button text=\"START\" id=\"start-button\" onClick={startTimer} />;\r\n  const stopButton = <Button text=\"STOP\" id=\"stop-button\"onClick={stopTimer} />;\r\n\r\n  function startTimer() {\r\n    setTimerIsRunning(true);\r\n  }\r\n\r\n  function stopTimer() {\r\n    setTimerIsRunning(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      {timerIsRunning ?\r\n        <TimerDisplay minutes={minutes}\r\n                      seconds={seconds}\r\n                      setTimerIsRunning={setTimerIsRunning}\r\n        /> :\r\n        <TimerInputs minutes={minutes}\r\n                     setMinutes={setMinutes}\r\n                     seconds={seconds}\r\n                     setSeconds={setSeconds}\r\n        />}\r\n      {timerIsRunning ? stopButton : startButton}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;","import React, {useState} from \"react\";\nimport Button from \"./Button\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction LogoutButton(props) {\n  const [redirect, setRedirect] = useState(false);\n\n  function logout() {\n    fetch(\"/user/logout\")\n    .then(res => {\n      if (!res.ok) {\n        console.error(\"Logout failed\");\n      } else {\n        //Redirects to login page if logout is successful\n        setRedirect(true);\n      }\n    });\n  }\n\n  return (\n    <div id={props.id}>\n      <Button text=\"LOGOUT\"\n              onClick={logout}\n      />\n      {redirect ? <Redirect to=\"/login\" /> : null}\n    </div>\n    \n  )\n}\n\nexport default LogoutButton;","import React, {useState, useEffect, useRef, useContext} from \"react\";\r\nimport {UserContext} from \"./UserContext\";\r\nimport Lift from \"./Lift\";\r\nimport Button from \"./Button\";\r\nimport Timer from \"./Timer\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Current(props) {\r\n  const [lifts, setLifts] = useState([1]);\r\n  const [workoutArr, setWorkoutArr] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const liftNameInputRef = useRef(null);\r\n  const user = useContext(UserContext);\r\n\r\n  function addLift() {\r\n    const newLiftNum = lifts.length + 1;\r\n    setLifts(prev => [...prev, newLiftNum]);\r\n  }\r\n\r\n  //Checks to see if the lift is already in workoutArr and replaces/adds it\r\n  function addToWorkout(liftObj) {\r\n    if (workoutArr.some(obj => obj.id === liftObj.id)) {\r\n      setWorkoutArr(workoutArr.map(obj => {\r\n        if (obj.id === liftObj.id) {\r\n          return liftObj;\r\n        } else {\r\n          return obj;\r\n        }\r\n      }));\r\n    } else {\r\n      setWorkoutArr([...workoutArr, liftObj]);\r\n    }\r\n  }\r\n  \r\n  //Saves workout to database\r\n  function saveWorkout() {\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const date = today.getDate();\r\n    const year = today.getFullYear();\r\n    const dateString = `${month}-${date}-${year}`;\r\n    const workoutObj = {[dateString]: workoutArr};\r\n    \r\n    fetch(`/workout/addWorkout?user=${user}&workoutObj=${JSON.stringify(workoutObj)}`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        res.text().then(text => {\r\n          setMessage(\"Error: Workout was not saved successfully.\");\r\n          console.error(text);\r\n        });\r\n      } else {\r\n          setMessage(\"Workout saved to your history!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  //Focuses the Lift input when a new lift is added\r\n  useEffect(() => {\r\n    liftNameInputRef.current.focus();\r\n  }, [lifts]);\r\n\r\n  const allLifts = lifts.map(liftNum => {\r\n    return <Lift key={liftNum}\r\n                 id={liftNum}\r\n                 ref={liftNameInputRef}\r\n                 addToWorkout={addToWorkout}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"lifts-container\">\r\n        {allLifts}\r\n        <Button text=\"ADD LIFT\"\r\n                onClick={addLift}\r\n        />\r\n      </div>\r\n      <Button text=\"SAVE WORKOUT\"\r\n              id=\"save-button\" \r\n              onClick={saveWorkout}\r\n      />\r\n      <p className=\"message\">{message}</p>\r\n      <Timer />\r\n      <LogoutButton id=\"logout-button-current\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current;\r\n","import React from \"react\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction PastLift(props) {\r\n  return (\r\n    <div className=\"past-lift\">\r\n      <p className=\"past-lift-text\"><span className=\"bold-text\">LIFT:&nbsp;</span>{props.lift}\r\n        <span className=\"bold-text\">&nbsp;&nbsp;&nbsp;WEIGHT:&nbsp;</span>{props.weight}lbs</p>\r\n      <p className=\"past-reps-text\">{props.reps}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PastLift;","import React from \"react\";\r\nimport \"../Styles/styles.scss\";\r\nimport PastLift from \"./PastLift\";\r\nimport Button from \"./Button\";\r\n\r\nfunction PastWorkout(props) {\r\n  const pastLifts = props.workoutArr.map(lift => {    \r\n    let repsArr = [];\r\n    const numOfSets = Object.keys(lift).length - 2;\r\n    let i;\r\n    for (i = 1; i < numOfSets; i++) {\r\n      repsArr.push(<span><span className=\"bold-text\">SET {i}:</span> {lift[`Set ${i}`]} reps&nbsp;&nbsp;&nbsp;</span>);\r\n    }\r\n    return (\r\n      <PastLift lift={lift[\"Lift\"]}\r\n                weight={lift[\"Weight\"]}\r\n                reps={repsArr}\r\n                key={lift[\"id\"]}\r\n      />\r\n    )                     \r\n  });\r\n  \r\n  return (\r\n    <div className=\"past-workout\">\r\n      <p className=\"date-text\">{props.date}</p>\r\n      {pastLifts}\r\n      <Button text=\"REMOVE\"\r\n              id=\"remove-button\"\r\n              onClick={() => props.removeWorkout(props.id)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PastWorkout;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport \"../Styles/styles.scss\";\r\nimport {UserContext} from \"./UserContext\";\r\nimport PastWorkout from \"./PastWorkout\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\nfunction History(props) {\r\n  const user = useContext(UserContext);\r\n  const [workoutHistory, setWorkoutHistory] = useState();\r\n\r\n  //Gets workout history from database\r\n  useEffect(() => {\r\n    fetch(`/workout/getHistory?user=${user}`)\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        res.text().then(text => {\r\n          console.error(text);\r\n        });\r\n      } else {\r\n        res.text().then(text => {\r\n          setWorkoutHistory(JSON.parse(text));\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  //Removes PastWorkout when \"Remove\" button is clicked\r\n  function removeWorkout(id) {\r\n    let workoutHistoryCopy = workoutHistory;\r\n    const newWorkoutHistory = workoutHistoryCopy.filter(workout => {\r\n      return (workoutHistoryCopy.indexOf(workout) + 1) !== id\r\n    })\r\n    setWorkoutHistory(newWorkoutHistory)\r\n    fetch(`/workout/updateHistory?user=${user}&workoutHistory=${JSON.stringify(newWorkoutHistory)}`, {\r\n      method: \"PUT\"\r\n    })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        res.text().then(text => {\r\n          console.error(text);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const pastWorkouts = workoutHistory ? \r\n    workoutHistory.map(workout => {\r\n      const workoutObj = workout;\r\n      const workoutDate = Object.keys(workoutObj)\r\n      return (\r\n        <PastWorkout date={workoutDate}\r\n                     workoutArr={workoutObj[workoutDate]}\r\n                     removeWorkout={removeWorkout}\r\n                     id={workoutHistory.indexOf(workout) + 1}\r\n                     key={workoutHistory.indexOf(workout) + 1}\r\n        />\r\n      )\r\n    })\r\n  : null;\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      {pastWorkouts}\r\n      <LogoutButton id=\"logout-button-history\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History;","import React, {useState, useContext} from \"react\";\r\nimport \"../Styles/styles.scss\";\r\nimport {UserContext} from \"./UserContext\";\r\nimport Button from \"./Button\";\r\n\r\nfunction WeightInput(props) {\r\n  const [input, setInput] = useState(\"\");\r\n  const user = useContext(UserContext);\r\n\r\n  function handleChange(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  //Saves current weight to database and state\r\n  function addToHistory() {\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const date = today.getDate();\r\n    const year = today.getFullYear();\r\n    const dateString = `${month}-${date}-${year}`;\r\n    const weightObj = {[dateString]: input};\r\n\r\n    fetch(`/weight/addWeight?user=${user}&weightObj=${JSON.stringify(weightObj)}`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        res.text().then(text => {\r\n          console.error(text);\r\n        });\r\n      } else {\r\n        res.text().then(text => {\r\n          props.setWeightHistory(JSON.parse(text));\r\n          setInput(\"\");\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-box\">\r\n      <label htmlFor=\"weight\">Current Weight</label>\r\n      <div className=\"input-container\" id=\"weight-input-container\">\r\n        <input type=\"text\"\r\n              id=\"weight\"\r\n              value={input}\r\n              onChange={handleChange}\r\n        />\r\n      </div>\r\n      <Button text=\"SAVE\"\r\n              onClick={addToHistory}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeightInput;","import React, {useState, useEffect} from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction WeightChart(props) {\r\n  const datesArr = props.weightHistory.map(obj => {\r\n    const keyArr = Object.keys(obj);\r\n    return keyArr[0];\r\n  });\r\n  const weightsArr = props.weightHistory.map(obj => {\r\n    const valueArr = Object.values(obj);\r\n    return valueArr[0];\r\n  });\r\n\r\n  //Data and styling for the chart\r\n  const chartData = {\r\n    labels: datesArr,\r\n    datasets: [{\r\n      label: \"Weight\",\r\n      data: weightsArr,\r\n      borderColor: \"rgb(100, 100, 100)\",\r\n      borderWidth: 3,\r\n      pointBackgroundColor: \"rgb(100, 100, 100)\"\r\n    }]\r\n  };\r\n  const chartOptions = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          lineWidth: 1,\r\n          color: \"rgb(0, 0, 0)\"\r\n        },\r\n        ticks: {\r\n          fontColor: \"rgb(100, 100, 100)\",\r\n          fontSize: 16,\r\n          fontStyle: \"bold\"\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          lineWidth: 1,\r\n          color: \"rgb(0, 0, 0)\"\r\n        },\r\n        ticks: {\r\n          fontColor: \"rgb(100, 100, 100)\",\r\n          fontSize: 16,\r\n          fontStyle: \"bold\",\r\n          lineHeight: 2\r\n        }\r\n      }]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"weight-chart\">\r\n      <Line data={chartData}\r\n            options={chartOptions}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeightChart;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport WeightInput from \"./WeightInput\";\r\nimport WeightChart from \"./WeightChart\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport {UserContext} from \"./UserContext\";\r\nimport \"../Styles/styles.scss\";\r\n\r\nfunction Weight() {\r\n  const [weightHistory, setWeightHistory] = useState([]);\r\n\r\n  const user = useContext(UserContext);\r\n\r\n  //Gets weightHistory from database\r\n  useEffect(() => {\r\n    fetch(`/weight/getHistory?user=${user}`)\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        res.text().then(text => {\r\n          console.error(text);\r\n        });\r\n      } else {\r\n        res.text().then(text => {\r\n          setWeightHistory(JSON.parse(text));\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"weight-container\">\r\n      <WeightInput setWeightHistory={setWeightHistory} />\r\n      <WeightChart weightHistory={weightHistory} />\r\n      <LogoutButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weight;","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport Current from \"./Current\";\nimport History from \"./History\";\nimport Weight from \"./Weight\";\n\nfunction User() {\n  return (\n    <div className=\"user-container\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/user/current\"><Current /></Route>\n        <Route path=\"/user/history\"><History /></Route>\n        <Route path=\"/user/weight\"><Weight /></Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default User;","import React, {useState, useEffect} from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nfunction ProtectedRoute(props) {\n  const [isAuth, setIsAuth] = useState(true);\n\n  useEffect(() => {\n    fetch(\"/user/getUser\")\n      .then(res => {\n        if (!res.ok) {\n          res.text().then(text => {\n            console.error(text);\n            setIsAuth(false);\n          })\n        } else {\n          setIsAuth(true);\n        }\n      });\n  }, []);\n\n  return isAuth ? <Route {...props} /> : <Redirect to=\"/login\" />;\n}\n\nexport default ProtectedRoute;","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"./Button\";\nimport \"../Styles/styles.scss\";\n\nfunction Register(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState();\n\n  function handleNameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleClick() {\n    fetch(`/user/register?username=${username}&password=${password}`, {\n      method: \"POST\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        //Gives error message if registration is not successful\n        res.text().then(text => {\n          setMessage(text);\n          console.error(text);\n        })\n      } else {\n        //Redirects to home page if registration is successful\n        props.history.push(\"/\");\n      }\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <div className=\"register\">\n      <p className=\"reg-title\">Register new user</p>\n      {message ? <p>***{message}***</p> : null}\n      <div className=\"input-box reg-input-box\">\n        <label htmlFor=\"reg-username\">Username</label>\n        <div className=\"input-container\">\n          <input type=\"text\"\n                 id=\"reg-username\"\n                 value={username}\n                 onChange={handleNameChange}\n          />\n        </div>\n      </div>\n      <div className=\"input-box reg-input-box\">\n      <label htmlFor=\"reg-password\">Password</label>\n        <div className=\"input-container\">\n          <input type=\"password\"\n                 id=\"reg-password\"\n                 value={password}\n                 onChange={handlePasswordChange}\n          />\n        </div>\n    </div>\n    <Button text=\"REGISTER\"\n              onClick={handleClick}\n      />\n    <p className=\"reg-text\">Already have an account?</p>\n    <Link to=\"/login\">\n      <Button text=\"GO TO LOGIN PAGE\" />\n    </Link>\n  </div>\n  )\n}\n\nexport default Register;","import React, {useState} from \"react\";\nimport Button from \"./Button\";\nimport {Link} from \"react-router-dom\";\nimport \"../Styles/styles.scss\";\n\nfunction Register(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState();\n\n  function handleNameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleClick() {\n    fetch(`/user/login?username=${username}&password=${password}`, {\n      method: \"POST\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        //Gives error message if login is not successful\n        res.text().then(text => {\n          setMessage(text);\n          console.error(text);\n        })\n      } else {\n        //Redirects to home page if login is successful\n        props.history.push(\"/user/current\");\n      }\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <div className=\"register\">\n      {message ? <p>***{message}***</p> : null}\n      <div className=\"input-box reg-input-box\">\n        <label htmlFor=\"reg-username\">Username</label>\n        <div className=\"input-container\">\n          <input type=\"text\"\n                  id=\"reg-username\"\n                  value={username}\n                  onChange={handleNameChange}\n          />\n        </div>\n      </div>\n      <div className=\"input-box reg-input-box\">\n      <label htmlFor=\"reg-password\">Password</label>\n        <div className=\"input-container\">\n          <input type=\"password\"\n                  id=\"reg-password\"\n                  value={password}\n                  onChange={handlePasswordChange}\n          />\n        </div>\n    </div>\n    <Button text=\"LOGIN\"\n            onClick={handleClick}\n      />\n    <p className=\"reg-text\">Don't have an account?</p>\n    <Link to=\"/register\">\n      <Button text=\"REGISTER NEW USER\" />\n    </Link>\n  </div>\n  )\n}\n\nexport default Register;","import React from 'react';\nimport './Styles/styles.scss';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {UserContextProvider} from \"./Components/UserContext\";\nimport User from \"./Components/User\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport Register from \"./Components/Register\";\nimport Login from \"./Components/Login\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/user\" />\n        </Route>\n        <ProtectedRoute path=\"/user\">\n          <UserContextProvider>\n            <User />\n          </UserContextProvider>\n        </ProtectedRoute>\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n      </Switch>\n    </div>\n    \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/styles.scss';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}